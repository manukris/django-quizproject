# Generated by Django 2.2.2 on 2019-06-26 04:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuizUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nationality', models.CharField(default='null', max_length=50)),
                ('phone', models.CharField(default='null', max_length=50)),
                ('researchInterest', models.CharField(default='null', max_length=60)),
                ('disiplines', models.CharField(default='null', max_length=70)),
                ('researchMethod', models.CharField(default='null', max_length=200)),
                ('referenceStyle', models.CharField(default='null', max_length=200)),
                ('profile', models.CharField(default='null', max_length=50)),
                ('street1', models.CharField(default='null', max_length=100)),
                ('street2', models.CharField(default='null', max_length=100)),
                ('state', models.CharField(default='null', max_length=100)),
                ('city', models.CharField(default='null', max_length=100)),
                ('postcode', models.CharField(default='null', max_length=100)),
                ('country', models.CharField(default='null', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.CharField(max_length=50)),
                ('degreelevel', models.CharField(max_length=50)),
                ('degree', models.CharField(max_length=50)),
                ('startmonth', models.CharField(max_length=50)),
                ('endmonth', models.CharField(max_length=50)),
                ('startyear', models.CharField(max_length=50)),
                ('endyear', models.CharField(max_length=50)),
                ('document', models.FileField(upload_to='documents/')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizapp.QuizUser')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('startmonth', models.CharField(max_length=50)),
                ('endmonth', models.CharField(max_length=50)),
                ('startyear', models.CharField(max_length=50)),
                ('endyear', models.CharField(max_length=50)),
                ('iscurrent', models.BooleanField(default=False)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizapp.QuizUser')),
            ],
        ),
    ]
